# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: UserOrderByInput
  ): [User!]!
  me: User!
  games: [Game!]!
  game(id: ID!): Game!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  login(data: LoginUserInput!): AuthPayload!
  deleteUser: User!
  updateUser(data: UpdateUserInput!): User!
  createGame(data: CreateGameInput!): Game!
}

# type Subscription {

# }

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input CreateGameInput {
  title: String!
  published: Boolean!
  finished: Boolean!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

type User {
  id: ID!
  name: String!
  email: String
  password: String!
  updatedAt: String!
  createdAt: String!
}

type Game {
  id: ID!
  slug: String!
  host: User!
  players: [Player!]!
  finished: Boolean!
  published: Boolean!
  updatedAt: String!
  createdAt: String!
}

type Player {
  id: ID!
  nickname: String!
  game: Game!
  updatedAt: String!
  createdAt: String!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
